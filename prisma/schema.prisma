generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* --------- LLANTAS NUEVAS ---------- */
model NewTire {
  id             Int      @id @default(autoincrement())
  brand          String
  size           String
  type           String
  weight         Float
  condition      String   @default("Nueva")
  quantity       Int
  minStock       Int      @default(5)   // üëà NUEVO: m√≠nimo permitido
  priceUnit      Float
  priceWholesale Float
  priceRetail    Float
  location       String
  createdAt      DateTime @default(now())

  invoiceItems   InvoiceItem[] @relation("NewTireToInvoiceItem")
}

/* --------- LLANTAS USADAS ---------- */
model UsedTire {
  id             Int      @id @default(autoincrement())
  brand          String
  size           String
  type           String
  weight         Float
  condition      String   @default("Usada")
  quantity       Int
  minStock       Int      @default(5)   // üëà NUEVO
  priceUnit      Float
  priceWholesale Float
  priceRetail    Float
  location       String
  createdAt      DateTime @default(now())

  invoiceItems   InvoiceItem[] @relation("UsedTireToInvoiceItem")
}

/* ------------- (OPCIONAL) ALERTAS ------------- */
model StockAlert {
  id         Int      @id @default(autoincrement())
  tireType   String              // 'new' o 'used'
  tireId     Int                 // referencia a NewTire.id o UsedTire.id
  quantity   Int
  createdAt  DateTime @default(now())
  resolved   Boolean  @default(false) // marcar como atendida
}

/* ------------- CLIENTE ------------- */
model Customer {
  id        Int      @id @default(autoincrement())
  fullName  String
  idNumber  String?
  phone     String?
  address   String?
  createdAt DateTime @default(now())

  invoices  Invoice[]
}

/* -------------- USUARIO ------------ */
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  fullName  String
  role      String
  password  String
  createdAt DateTime @default(now())

  invoices  Invoice[]
}

/* ------------- FACTURA ------------- */
model Invoice {
  id          Int      @id @default(autoincrement())
  invoiceCode String   @unique
  date        DateTime @default(now())
  totalAmount Float
  totalWeight Float    @default(0)
  customerId  Int
  userId      Int?

  customer    Customer      @relation(fields: [customerId], references: [id])
  user        User?         @relation(fields: [userId], references: [id])
  items       InvoiceItem[]
}

/* ---------- √çTEMS DE FACTURA ------- */
model InvoiceItem {
  id         Int  @id @default(autoincrement())
  invoiceId  Int
  newTireId  Int?
  usedTireId Int?
  quantity   Int
  unitPrice  Float
  subtotal   Float

  invoice    Invoice   @relation(fields: [invoiceId], references: [id])
  newTire    NewTire?  @relation("NewTireToInvoiceItem", fields: [newTireId], references: [id])
  usedTire   UsedTire? @relation("UsedTireToInvoiceItem", fields: [usedTireId], references: [id])
}